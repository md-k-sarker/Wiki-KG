/**
 * Sumo with ADE training Data
 * 
 *
 */

// declare some prefixes to use as abbreviations
prefixes = [ ("ex","http://www.adampease.org/OP/SUMO.owl#") ]

// knowledge source definition
ks.type = "OWL File"
ks.fileName = "sumo_hand_curated.owl"

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
//lp.type = "posonlylp"
lp.type = "posNegStandard"
lp.positiveExamples = {"ex:OutdoorWareHouse_Indi_1_ADE_train_00019754","ex:OutdoorWareHouse_Indi_2_ADE_train_00019755", "ex:OutdoorWareHouse_Indi_3_ADE_train_00019756","ex:IndoorWarehouse_Indi_1_ADE_train_00019702","ex:IndoorWarehouse_Indi_2_ADE_train_00019703","ex:IndoorWarehouse_Indi_3_ADE_train_00019704","ex:IndoorWarehouse_Indi_4_ADE_train_00019705", "ex:IndoorWarehouse_Indi_5_ADE_train_00019706"}

lp.negativeExamples = {"ex:WorkRoom_Indi_1_ADE_train_00020098", "ex:WorkRoom_Indi_2_ADE_train_00020099",  "ex:WorkRoom_Indi_3_ADE_train_00020100", "ex:WorkRoom_Indi_4_ADE_train_00020101"}

// create learning algorithm to run
alg.type = "celoe"
alg.maxExecutionTimeInSeconds = 6000